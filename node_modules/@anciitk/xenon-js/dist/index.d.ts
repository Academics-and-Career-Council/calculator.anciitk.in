import { AxiosInstance, AxiosRequestConfig } from 'axios';
export declare enum Role {
    Student = "student",
    Secretary = "secretary",
    Manager = "manager",
    Admin = "admin"
}
export interface UserCredentials {
    email: string;
    rollno: number;
    banned: boolean;
    department: string;
    role: Role;
    name: string;
    username: string;
    id: string;
    registration_id: string;
}
/** Response returned by the Xenon REST API in all cases.
 * You can use the `message` field to display warnings/sucess messages*/
export interface XenonResponse {
    message: string;
}
export declare class Xenon {
    _axios: AxiosInstance;
    constructor(xenon_url: string, axios_config?: AxiosRequestConfig);
    whoami(): Promise<UserCredentials>;
    /**
     * Registers the user using supplied credentials
     * @param {string} username
     * @param {string} rollno
     * @param {AxiosRequestConfig} axios_config Optional Configuration to be added to axios request
     * @returns {Promise<XenonResponse>} `response` Optional Response
     */
    register(username: string, rollno: string, token: string, axios_config?: AxiosRequestConfig): Promise<XenonResponse>;
    recover(username: string, axios_config?: AxiosRequestConfig): Promise<XenonResponse>;
}
