function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var axios = _interopDefault(require('axios'));

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

(function (Role) {
  Role["Student"] = "student";
  Role["Secretary"] = "secretary";
  Role["Manager"] = "manager";
  Role["Admin"] = "admin";
})(exports.Role || (exports.Role = {}));

var Xenon = /*#__PURE__*/function () {
  function Xenon(xenon_url, axios_config) {
    this._axios = axios.create(_extends({}, axios_config, {
      baseURL: xenon_url,
      withCredentials: true
    }));
  }

  var _proto = Xenon.prototype;

  _proto.whoami = function whoami() {
    try {
      var _this2 = this;

      return Promise.resolve(new Promise(function (resolve, reject) {
        _this2._axios.get('/whoami').then(function (resp) {
          resolve(resp.data);
        })["catch"](function (error) {
          var _error$response;

          return reject({
            message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || 'An unknown error occured!'
          });
        });
      }));
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.register = function register(username, rollno, token, axios_config) {
    try {
      var _this4 = this;

      var data = new FormData();
      data.append('username', username);
      data.append('rollno', rollno);
      data.append('token', token);
      return Promise.resolve(new Promise(function (resolve, reject) {
        _this4._axios.post('/register', data, axios_config).then(function (resp) {
          resolve(resp.data);
        })["catch"](function (error) {
          var _error$response2;

          return reject({
            message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.message) || 'An unknown error occured!'
          });
        });
      }));
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.recover = function recover(username, axios_config) {
    try {
      var _this6 = this;

      var data = new FormData();
      data.append('username', username);
      return Promise.resolve(new Promise(function (resolve, reject) {
        _this6._axios.post('/recover', data, axios_config).then(function (resp) {
          resolve(resp.data);
        })["catch"](function (error) {
          var _error$response3;

          return reject({
            message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data.message) || 'An unknown error occured!'
          });
        });
      }));
    } catch (e) {
      return Promise.reject(e);
    }
  };

  return Xenon;
}();

exports.Xenon = Xenon;
//# sourceMappingURL=index.js.map
