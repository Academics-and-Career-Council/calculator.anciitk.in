{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import axios, { AxiosError, AxiosInstance, AxiosRequestConfig } from 'axios'\n\nexport enum Role {\n  Student = 'student',\n  Secretary = 'secretary',\n  Manager = 'manager',\n  Admin = 'admin'\n}\n\nexport interface UserCredentials {\n  email: string\n  rollno: number\n  banned: boolean\n  department: string\n  role: Role\n  name: string\n  username: string\n  id: string\n  registration_id: string\n}\n\n/** Response returned by the Xenon REST API in all cases.\n * You can use the `message` field to display warnings/sucess messages*/\nexport interface XenonResponse {\n  message: string\n}\n\nexport class Xenon {\n  _axios: AxiosInstance\n  constructor(xenon_url: string, axios_config?: AxiosRequestConfig) {\n    this._axios = axios.create({\n      ...axios_config,\n      baseURL: xenon_url,\n      withCredentials: true\n    })\n  }\n\n  async whoami() {\n    return new Promise<UserCredentials>((resolve, reject) => {\n      this._axios\n        .get<UserCredentials>('/whoami')\n        .then((resp) => {\n          resolve(resp.data)\n        })\n        .catch((error: AxiosError<XenonResponse>) => {\n          return reject({\n            message: error.response?.data.message || 'An unknown error occured!'\n          })\n        })\n    })\n  }\n\n  /**\n   * Registers the user using supplied credentials\n   * @param {string} username\n   * @param {string} rollno\n   * @param {AxiosRequestConfig} axios_config Optional Configuration to be added to axios request\n   * @returns {Promise<XenonResponse>} `response` Optional Response\n   */\n  async register(\n    username: string,\n    rollno: string,\n    token: string,\n    axios_config?: AxiosRequestConfig\n  ): Promise<XenonResponse> {\n    var data = new FormData()\n    data.append('username', username)\n    data.append('rollno', rollno)\n    data.append('token', token)\n    return new Promise<XenonResponse>((resolve, reject) => {\n      this._axios\n        .post<XenonResponse>('/register', data, axios_config)\n        .then((resp) => {\n          resolve(resp.data)\n        })\n        .catch((error: AxiosError<XenonResponse>) => {\n          return reject({\n            message: error.response?.data.message || 'An unknown error occured!'\n          })\n        })\n    })\n  }\n\n  async recover(username: string, axios_config?: AxiosRequestConfig) {\n    var data = new FormData()\n    data.append('username', username)\n    return new Promise<XenonResponse>((resolve, reject) => {\n      this._axios\n        .post<XenonResponse>('/recover', data, axios_config)\n        .then((resp) => {\n          resolve(resp.data)\n        })\n        .catch((error: AxiosError<XenonResponse>) => {\n          return reject({\n            message: error.response?.data.message || 'An unknown error occured!'\n          })\n        })\n    })\n  }\n}\n"],"names":["Role","Xenon","xenon_url","axios_config","_axios","axios","create","baseURL","withCredentials","whoami","Promise","resolve","reject","get","then","resp","data","error","message","response","register","username","rollno","token","FormData","append","post","recover"],"mappings":";;;;;;;;;;;;;;;;;;;;IAEYA;;AAAZ,WAAYA;AACVA,EAAAA,eAAA,YAAA;AACAA,EAAAA,iBAAA,cAAA;AACAA,EAAAA,eAAA,YAAA;AACAA,EAAAA,aAAA,UAAA;AACD,CALD,EAAYA,IAAI,KAAJA,IAAI,KAAA,CAAhB;;IAyBaC,KAAb;AAEE,iBAAYC,SAAZ,EAA+BC,YAA/B;AACE,SAAKC,MAAL,GAAcC,KAAK,CAACC,MAAN,cACTH,YADS;AAEZI,MAAAA,OAAO,EAAEL,SAFG;AAGZM,MAAAA,eAAe,EAAE;AAHL,OAAd;AAKD;;AARH;;AAAA,SAUQC,MAVR;AAAA;mBAYM;;AADF,6BAAO,IAAIC,OAAJ,CAA6B,UAACC,OAAD,EAAUC,MAAV;AAClC,eAAKR,MAAL,CACGS,GADH,CACwB,SADxB,EAEGC,IAFH,CAEQ,UAACC,IAAD;AACJJ,UAAAA,OAAO,CAACI,IAAI,CAACC,IAAN,CAAP;AACD,SAJH,WAKS,UAACC,KAAD;;;AACL,iBAAOL,MAAM,CAAC;AACZM,YAAAA,OAAO,EAAE,oBAAAD,KAAK,CAACE,QAAN,oEAAgBH,IAAhB,CAAqBE,OAArB,KAAgC;AAD7B,WAAD,CAAb;AAGD,SATH;AAUD,OAXM,CAAP;AAYD,KAvBH;AAAA;AAAA;AAAA;;AAAA,SAgCQE,QAhCR,qBAiCIC,QAjCJ,EAkCIC,MAlCJ,EAmCIC,KAnCJ,EAoCIpB,YApCJ;AAAA;mBA2CM;;AALF,UAAIa,IAAI,GAAG,IAAIQ,QAAJ,EAAX;AACAR,MAAAA,IAAI,CAACS,MAAL,CAAY,UAAZ,EAAwBJ,QAAxB;AACAL,MAAAA,IAAI,CAACS,MAAL,CAAY,QAAZ,EAAsBH,MAAtB;AACAN,MAAAA,IAAI,CAACS,MAAL,CAAY,OAAZ,EAAqBF,KAArB;AACA,6BAAO,IAAIb,OAAJ,CAA2B,UAACC,OAAD,EAAUC,MAAV;AAChC,eAAKR,MAAL,CACGsB,IADH,CACuB,WADvB,EACoCV,IADpC,EAC0Cb,YAD1C,EAEGW,IAFH,CAEQ,UAACC,IAAD;AACJJ,UAAAA,OAAO,CAACI,IAAI,CAACC,IAAN,CAAP;AACD,SAJH,WAKS,UAACC,KAAD;;;AACL,iBAAOL,MAAM,CAAC;AACZM,YAAAA,OAAO,EAAE,qBAAAD,KAAK,CAACE,QAAN,sEAAgBH,IAAhB,CAAqBE,OAArB,KAAgC;AAD7B,WAAD,CAAb;AAGD,SATH;AAUD,OAXM,CAAP;AAYD,KAtDH;AAAA;AAAA;AAAA;;AAAA,SAwDQS,OAxDR,oBAwDgBN,QAxDhB,EAwDkClB,YAxDlC;AAAA;mBA4DM;;AAHF,UAAIa,IAAI,GAAG,IAAIQ,QAAJ,EAAX;AACAR,MAAAA,IAAI,CAACS,MAAL,CAAY,UAAZ,EAAwBJ,QAAxB;AACA,6BAAO,IAAIX,OAAJ,CAA2B,UAACC,OAAD,EAAUC,MAAV;AAChC,eAAKR,MAAL,CACGsB,IADH,CACuB,UADvB,EACmCV,IADnC,EACyCb,YADzC,EAEGW,IAFH,CAEQ,UAACC,IAAD;AACJJ,UAAAA,OAAO,CAACI,IAAI,CAACC,IAAN,CAAP;AACD,SAJH,WAKS,UAACC,KAAD;;;AACL,iBAAOL,MAAM,CAAC;AACZM,YAAAA,OAAO,EAAE,qBAAAD,KAAK,CAACE,QAAN,sEAAgBH,IAAhB,CAAqBE,OAArB,KAAgC;AAD7B,WAAD,CAAb;AAGD,SATH;AAUD,OAXM,CAAP;AAYD,KAvEH;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;"}