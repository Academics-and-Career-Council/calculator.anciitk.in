'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var styled = require('styled-components');
var React = require('react');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

var buttonStyles = function (_a) {
    var big = _a.big, theme = _a.theme;
    return "\n" + typographyButtonStyles({ theme: theme }) + "\n\n& .button {\n  line-height: " + (!big ? '20px' : '30px') + ";\n  color: " + theme.grey0 + ";\n  border-radius: " + theme.borderRadius + ";\n  \n  width: 100%;\n  \n  padding: 5px 12px;\n  margin: 7px 0;\n  border: 2px solid transparent;\n  outline: none;\n  \n  background-color: " + theme.primary60 + ";\n \n  cursor: pointer;\n}\n\n& .button:disabled, & .button:hover:disabled {\n  color: " + theme.grey30 + ";\n  background-color: " + theme.grey10 + ";\n}\n\n& .button.fake-hover,\n& .button:hover {\n  background-color: " + theme.primary30 + ";\n}\n\n& .button.fake-focus,\n& .button:focus {\n  background-color: " + theme.primary60 + ";\n  border: 2px solid " + theme.blue30 + ";\n  outline: none;\n}\n\n& .button.fake-click,\n& .button:active {\n  background-color: " + theme.primary70 + ";\n  outline: none;\n  border: 2px solid transparent;\n}\n";
};
var cssButtonStyles = function (props) {
    return wrapCss('input-button', buttonStyles(props));
};
var cssButtonStylesBig = function (props) {
    return wrapCss('input-button-big', buttonStyles(__assign(__assign({}, props), { big: true })));
};

var linkButtonStyles = function (_a) {
    var big = _a.big, theme = _a.theme;
    return "\nbox-sizing: border-box;\n  \n& .linkButton {\n  box-sizing: border-box;\n  \n  line-height: " + (!big ? '20px' : '30px') + ";\n  color: " + theme.grey0 + ";\n  border-radius: " + theme.borderRadius + ";\n  \n  width: 100%;\n  \n  padding: 5px 12px;\n  margin: 7px 0;\n  border: 2px solid transparent;\n  outline: none;\n  \n  background-color: " + theme.primary60 + ";\n \n  cursor: pointer;\n}\n\n& .linkButton.disabled, & .linkButton.disabled:hover {\n  color: " + theme.grey30 + ";\n  background-color: " + theme.grey10 + ";\n  cursor: not-allowed;\n  pointer-events: all !important;\n}\n\n& .linkButton.fake-hover,\n& .linkButton:hover {\n  background-color: " + theme.primary30 + ";\n}\n\n& .linkButton.fake-focus,\n& .linkButton:focus {\n  background-color: " + theme.primary60 + ";\n  border: 2px solid " + theme.blue30 + ";\n  outline: none;\n}\n\n& .linkButton.fake-click,\n& .linkButton:active {\n  background-color: " + theme.primary70 + ";\n  outline: none;\n  border: 2px solid transparent;\n}\n\n& a {\n  &:hover,\n  &,\n  &:active,\n  &:focus,\n  &:visited {\n    text-decoration: none;\n    " + typographyButtonStyles({ theme: theme }) + "\n    display: inline-block;\n    text-align: center;\n    font-weight: 400;\n  }\n}\n";
};
var cssLinkButtonStyles = function (props) {
    return wrapCss('input-linkButton', linkButtonStyles(props));
};
var cssLinkButtonStylesBig = function (props) {
    return wrapCss('input-linkButton-big', linkButtonStyles(__assign(__assign({}, props), { big: true })));
};

var geometricPrecision = function (_a) {
    var theme = _a.theme;
    return theme.platform === 'react-native'
        ? ''
        : "text-rendering: geometricPrecision;\n";
};
var typographyH1Styles = function (props) { return "\n" + geometricPrecision(props) + "\nfont-family: " + props.theme.regularFont500 + ";\nfont-weight: 500;\nfont-style: normal;\nfont-size: 32px;\nline-height: 40px;\n"; };
var cssTypographyH1Styles = function (props) {
    return wrapCss('typography-h1', typographyH1Styles(props));
};
var typographyH2Styles = function (props) { return "\n" + geometricPrecision(props) + "\nfont-family: " + props.theme.regularFont400 + ";\nfont-weight: 400;\nfont-style: normal;\nfont-size: 16px;\nline-height: 24px;\n"; };
var cssTypographyH2Styles = function (props) {
    return wrapCss('typography-h2', typographyH2Styles(props));
};
var typographyH3Styles = function (props) { return "\n" + geometricPrecision(props) + "\nfont-family: " + props.theme.regularFont400 + ";\nfont-weight: 400;\nfont-style: normal;\nfont-size: 14px;\nline-height: 20px;\n"; };
var cssTypographyH3Styles = function (props) {
    return wrapCss('typography-h3', typographyH3Styles(props));
};
var typographyLeadStyles = function (props) { return "\n" + geometricPrecision(props) + "\nfont-family: " + props.theme.regularFont300 + ";\nfont-weight: 300;\nfont-style: normal;\nfont-size: 16px;\nline-height: 24px;\n"; };
var cssTypographyLeadStyles = function (props) {
    return wrapCss('typography-lead', typographyLeadStyles(props));
};
var typographyParagraphStyles = function (props) { return "\n" + geometricPrecision(props) + "\nfont-family: " + props.theme.regularFont300 + ";\nfont-weight: 300;\nfont-style: normal;\nfont-size: 14px;\nline-height: 20px;\n"; };
var cssTypographyParagraphStyles = function (props) {
    return wrapCss('typography-paragraph', typographyParagraphStyles(props));
};
var typographyButtonStyles = function (props) { return "\n" + geometricPrecision(props) + "\nfont-family: " + props.theme.regularFont300 + ";\nfont-weight: 300;\nfont-style: normal;\nfont-size: 14px;\nline-height: 20px;\n"; };
var cssTypographyButtonStyles = function (props) {
    return wrapCss('typography-button', typographyButtonStyles(props));
};
var typographyCodeStyles = function (_a) {
    var theme = _a.theme;
    return "\n" + geometricPrecision({ theme: theme }) + "\nfont-family: " + theme.codeFont400 + ";\nfont-weight: 400;\nfont-style: normal;\nfont-size: 14px;\nline-height: 20px;\n\ncolor: " + theme.grey0 + "\n";
};
var cssTypographyCodeStyles = function (props) {
    return wrapCss('typography-code', typographyCodeStyles(props));
};
var typographyCaptionStyles = function (props) { return "\n" + geometricPrecision(props) + "\nfont-family: " + props.theme.regularFont300 + ";\nfont-weight: 300;\nfont-style: normal;\nfont-size: 12px;\nline-height: 18px;\nmargin-bottom: 14px;\n"; };
var cssTypographyCaptionStyles = function (props) {
    return wrapCss('typography-caption', typographyCaptionStyles(props));
};
var typographyLinkStyles = function (_a) {
    var theme = _a.theme;
    var css = geometricPrecision({ theme: theme }) + "\nfont-family: " + theme.regularFont300 + ";\n\nfont-size: 12px;\nline-height: 18px;\n\ntext-decoration: none;\n\ncolor: " + theme.primary60 + ";\n";
    if (theme.platform !== 'react-native') {
        css += "\n&.fake-visited, \n&:visited {\n  color: " + theme.primary70 + ";\n}\n\n&.fake-hover,\n&:hover {\n  color: " + theme.primary30 + ";\n}\n&.fake-active, \n&:active {\n  color: " + theme.primary70 + ";\n}\n";
    }
    return css;
};
var cssTypographyLinkStyles = function (props) {
    return wrapCss('typography-link', typographyLinkStyles(props));
};

var textColorForState = function (_a) {
    var state = _a.state, theme = _a.theme;
    switch (state) {
        case 'success':
            return "color: " + theme.green60 + ";";
        case 'error':
            return "color: " + theme.red60 + ";";
    }
    return '';
};
var borderColorForState = function (_a) {
    var state = _a.state, theme = _a.theme;
    switch (state) {
        case 'disabled':
            return 'transparent';
        case 'success':
            return theme.green60;
        case 'error':
            return theme.red60;
    }
    return theme.grey30;
};
var backgroundColorForState = function (_a) {
    var state = _a.state, theme = _a.theme;
    switch (state) {
        case 'disabled':
            return theme.grey10;
    }
    return 'transparent';
};
var textInputTitleStyles = function (props) { return "\n  " + typographyH3Styles(props) + "\n  " + textColorForState(props) + "\n"; };
var cssTextInputTitleStyles = function (props) {
    return wrapCss('text-input-title', textInputTitleStyles(props));
};
var textInputSubtitleStyles = function (props) { return "\n  " + typographyCaptionStyles(props) + "\n  " + textColorForState(props) + "\n  margin-bottom: 15px;\n"; };
var cssTextInputSubtitleStyles = function (props) {
    return wrapCss('text-input-subtitle', textInputSubtitleStyles(props));
};
var textInputStyles = function (props) {
    var theme = props.theme, help = props.help, state = props.state;
    var css = "\n  box-sizing: border-box;\n    \n  /* We use custom text definitions it breaks React Native form inputs: */\n  font-family: " + props.theme.regularFont300 + ";\n  font-weight: 300;\n  font-style: normal;\n  font-size: 14px;\n  \n  color: " + (state === 'disabled' ? theme.grey30 : theme.grey70) + "; \n\n  width: 100%;\n  padding: 5px 12px;\n  \n  margin-top: 7px;\n  margin-bottom: " + (!help ? '14px' : '7px') + ";\n  \n  border: 1px solid " + borderColorForState(props) + ";\n  border-radius: " + theme.borderRadius + ";\n  \n  background-color: " + backgroundColorForState(props) + ";\n  overflow: visible;\n";
    if (theme.platform !== 'react-native') {
        css += "\n  outline: none;\n\n  &.fake-hover,\n  &:hover {\n    border: 1px solid " + theme.primary30 + ";\n  }\n\n  &.fake-focus,\n  &:focus {\n    border: 1px solid " + theme.primary60 + ";\n  }\n";
    }
    return css;
};
var cssTextInputStyles = function (props) {
    return wrapCss('text-input', textInputStyles(props));
};

var checkboxStyles = function (_a) {
    var theme = _a.theme;
    return "\nmargin-bottom: 14px;\n  \n& .checkbox-title {\n  " + typographyH3Styles({ theme: theme }) + ";\n  color: " + theme.grey70 + ";\n  display: block;\n  margin-bottom: 6px;\n}\n\n& .checkbox-subtitle {\n  margin-top: 7px;\n}\n\n& .checkbox-inner {\n  display: flex;\n}\n\n& input[type=\"checkbox\"] {\n  display: none;\n}\n\n& input[type=\"checkbox\"] + label {\n  position: relative;\n  display: flex;\n}\n\n& input[type=\"checkbox\"] + label::before {\n  min-width: 12px;\n  min-height: 12px;\n  max-width: 12px;\n  max-height: 12px;\n  width: 12px;\n  height: 12px;\n  \n  content: \"\";\n  \n  border: 1px solid " + theme.grey10 + ";\n  margin-top: 2px;\n}\n\n& input[type=\"checkbox\"]:checked+label::before {\n  background-color: " + theme.primary60 + ";\n  \n  color: " + theme.grey0 + ";\n}\n\n& input[type=\"checkbox\"] + label svg {\n  position: absolute;\n  fill: " + theme.grey0 + ";\n  left: 3px;\n  top: 5px;\n}\n\n& label span {\n  " + typographyParagraphStyles({ theme: theme }) + "\n  \n  display: block;\n  margin-left: 16px;\n}\n";
};
var cssCheckboxStyles = function (props) {
    return wrapCss('checkbox', checkboxStyles(props));
};

var codeBoxStyles = function (_a) {
    var theme = _a.theme;
    return "\nbackground-color: " + theme.grey70 + ";\npadding: 20px;\nborder-radius: 8px;\ncolor: #ECFDFE;\noverflow-wrap: break-word;\n";
};
var cssCodeBoxStyles = function (props) {
    return wrapCss('code-box', codeBoxStyles(props));
};

var messageStyles = function (props) { return "\n  " + typographyH3Styles(props) + "\n  color: " + props.theme.red60 + ";\n  border: 1px solid " + props.theme.red30 + ";\n  border-radius: " + props.theme.borderRadius + ";\n  padding: 10px;\n  text-align: center;\n  margin-bottom: 32px;\n"; };
var cssMessageStyles = function (props) {
    return wrapCss('message', messageStyles(props));
};

var forkMeStylesText = function (props) { return "\n  " + typographyH3Styles(props) + "\n  color: " + props.theme.grey0 + ";\n  display: flex;  \n"; };
var cssForkMeStylesText = function (props) {
    return wrapCss('fork-me-text', forkMeStylesText(props));
};
var forkMeStylesImages = function () { return "\n  padding: 9px;\n  height: 18px;\n  width: 38px;\n"; };
var cssForkMeStylesImages = function (props) {
    return wrapCss('fork-me-image', forkMeStylesImages());
};
var forkMeStylesFork = function () { return "\n  height: 14px;\n  width: 14px;\n"; };
var cssForkMeStylesFork = function (props) {
    return wrapCss('fork-me-fork', forkMeStylesFork());
};
var forkMeStylesLink = function (props) {
    var css = "\n  " + typographyLinkStyles(props) + "\n  \n  font-size: 14px;\n  line-height: 20px;\n  color: " + props.theme.grey0 + ";\n  font-family: " + props.theme.regularFont500 + ";\n  font-weight: 500;\n  \n  flex-wrap: nowrap;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: row;\n";
    if (props.theme.platform !== 'react-native') {
        css += "\n  &.fake-visited, \n  &:visited {\n    color: " + props.theme.grey0 + ";\n  }\n  \n  &.fake-hover,\n  &:hover {\n    color: " + props.theme.grey30 + ";\n  }\n  &.fake-active, \n  &:active {\n    color: " + props.theme.grey30 + ";\n  }\n";
    }
    return css;
};
var cssForkMeStylesLink = function (props) {
    return wrapCss('fork-me-link', forkMeStylesLink(props));
};
var forkMeStyles = function (_a) {
    var theme = _a.theme;
    var css = "\n  background-color: " + theme.primary60 + ";\n  padding: 8px 32px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n";
    if (theme.platform === 'react') {
        css += "box-sizing: border-box;\n";
    }
    return css;
};
var cssForkMeStyles = function (props) {
    return wrapCss('fork-me', forkMeStyles(props));
};

var theme = {
    grey0: '#F9F9FA',
    grey5: '#F0F0F1',
    grey10: '#E1E1E3',
    grey30: '#B4B4BB',
    grey60: '#5A5B6A',
    grey70: '#4A4B57',
    grey100: '#19191D',
    blue30: '#9DC2FF',
    blue60: '#2979FF',
    blue70: '#2264D1',
    green30: '#A9D3AB',
    green60: '#43A047',
    green70: '#37833B',
    red30: '#FAA9A3',
    red60: '#F44336',
    red70: '#C8372D',
    blueGrey30: '#B4BBE2',
    blueGrey60: '#97A0D6',
    primaryAccent: '#FF80FF',
    primary30: '#F6A8C2',
    primary60: '#EC407A',
    primary70: '#C23564',
    borderRadius: '4px',
    regularFont300: "'Rubik', sans-serif",
    regularFont400: "'Rubik', sans-serif",
    regularFont500: "'Rubik', sans-serif",
    codeFont400: "'Roboto Mono', sans-serif"
};
function wrapCss(className, css) {
    return '.' + className + " {\n  " + css + "\n}";
}

var cssNormalize = "\n  /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n  /* Document\n   ========================================================================== */\n\n  /**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n  html {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n  }\n\n  /* Sections\n   ========================================================================== */\n\n  /**\n * Remove the margin in all browsers.\n */\n\n  body {\n    margin: 0;\n  }\n\n  /**\n * Render the 'main' element consistently in IE.\n */\n\n  main {\n    display: block;\n  }\n\n  /**\n * Correct the font size and margin on 'h1' elements within 'section' and\n * 'article' contexts in Chrome, Firefox, and Safari.\n */\n\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n\n  /* Grouping content\n   ========================================================================== */\n\n  /**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\n  hr {\n    box-sizing: content-box; /* 1 */\n    height: 0; /* 1 */\n    overflow: visible; /* 2 */\n  }\n\n  /**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd 'em' font sizing in all browsers.\n */\n\n  pre {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n\n  /* Text-level semantics\n   ========================================================================== */\n\n  /**\n * Remove the gray background on active links in IE 10.\n */\n\n  a {\n    background-color: transparent;\n  }\n\n  /**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\n  abbr[title] {\n    border-bottom: none; /* 1 */\n    text-decoration: underline; /* 2 */\n    text-decoration: underline dotted; /* 2 */\n  }\n\n  /**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\n  b,\n  strong {\n    font-weight: bolder;\n  }\n\n  /**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd 'em' font sizing in all browsers.\n */\n\n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n\n  /**\n * Add the correct font size in all browsers.\n */\n\n  small {\n    font-size: 80%;\n  }\n\n  /**\n * Prevent 'sub' and 'sup' elements from affecting the line height in\n * all browsers.\n */\n\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  sup {\n    top: -0.5em;\n  }\n\n  /* Embedded content\n   ========================================================================== */\n\n  /**\n * Remove the border on images inside links in IE 10.\n */\n\n  img {\n    border-style: none;\n  }\n\n  /* Forms\n   ========================================================================== */\n\n  /**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n\n  /**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\n  button,\n  input {\n    /* 1 */\n    overflow: visible;\n  }\n\n  /**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\n  button,\n  select {\n    /* 1 */\n    text-transform: none;\n  }\n\n  /**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button;\n  }\n\n  /**\n * Remove the inner border and padding in Firefox.\n */\n\n  button::-moz-focus-inner,\n  [type='button']::-moz-focus-inner,\n  [type='reset']::-moz-focus-inner,\n  [type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n\n  /**\n * Restore the focus styles unset by the previous rule.\n */\n\n  button:-moz-focusring,\n  [type='button']:-moz-focusring,\n  [type='reset']:-moz-focusring,\n  [type='submit']:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n\n  /**\n * Correct the padding in Firefox.\n */\n\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n\n  /**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from 'fieldset' elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    'fieldset' elements in all browsers.\n */\n\n  legend {\n    box-sizing: border-box; /* 1 */\n    color: inherit; /* 2 */\n    display: table; /* 1 */\n    max-width: 100%; /* 1 */\n    padding: 0; /* 3 */\n    white-space: normal; /* 1 */\n  }\n\n  /**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\n  progress {\n    vertical-align: baseline;\n  }\n\n  /**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\n  textarea {\n    overflow: auto;\n  }\n\n  /**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n  [type='checkbox'],\n  [type='radio'] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n  }\n\n  /**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  /**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n\n  /**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  /**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to 'inherit' in Safari.\n */\n\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n\n  /* Interactive\n   ========================================================================== */\n\n  /*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\n  details {\n    display: block;\n  }\n\n  /*\n * Add the correct display in all browsers.\n */\n\n  summary {\n    display: list-item;\n  }\n\n  /* Misc\n   ========================================================================== */\n\n  /**\n * Add the correct display in IE 10+.\n */\n\n  template {\n    display: none;\n  }\n\n  /**\n * Add the correct display in IE 10.\n */\n\n  [hidden] {\n    display: none;\n  }\n";
var normalize = styled.css(function () { return cssNormalize; });

var globalStyles = function (_a) {
    var theme = _a.theme;
    return "\n" + normalize + "\n\nhtml, body {\n  background-color: " + theme.grey5 + ";\n}\n";
};
var GlobalStyle = styled.createGlobalStyle(globalStyles);

var alertStyles = function (_a) {
    var theme = _a.theme, _b = _a.severity, severity = _b === void 0 ? 'info' : _b;
    return "\nborder: 1px solid " + (severity === 'info' ? theme.green30 : theme.red30) + ";\ncolor: " + (severity === 'info' ? theme.grey100 : theme.red60) + ";\nborder-radius: 5px;\npadding: 5px;\nmargin: 10px auto;\n";
};
var alertContentStyles = function () { return "\nmargin: 0;\n"; };

var cardStyles = function (_a) {
    var theme = _a.theme, wide = _a.wide;
    return "\nbackground: white;\nborder: 1px solid " + theme.grey10 + ";\n\ndisplay: flex;\nflex-direction: column;\nalign-items: stretch;\nwidth:  " + (wide ? '680' : '336') + "px;\nmargin: 0 auto;\npadding: 20px;\n";
};
var cardTitleStyles = function (_a) {
    var theme = _a.theme;
    return "\ncolor: " + theme.primary60 + ";\ntext-align: center;\nmargin-bottom: 15px;\n";
};

var Button = function (_a) {
    var helper = _a.helper, className = _a.className, props = __rest(_a, ["helper", "className"]);
    return (React__default['default'].createElement("div", { className: className },
        React__default['default'].createElement("button", __assign({ className: "button" }, props)),
        helper && React__default['default'].createElement("span", { className: "button-helper" }, helper)));
};
var Button$1 = styled__default['default'](Button)(buttonStyles);

var classnames = {exports: {}};

/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/

(function (module) {
/* global define */

(function () {

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if (module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else {
		window.classNames = classNames;
	}
}());
}(classnames));

var cn = classnames.exports;

var LinkButton = function (_a) {
    var helper = _a.helper, className = _a.className, props = __rest(_a, ["helper", "className"]);
    return (React__default['default'].createElement("div", { className: className },
        React__default['default'].createElement("a", __assign({ onClick: function (e) {
                if (props.disabled) {
                    e.stopPropagation();
                    e.preventDefault();
                }
            }, "aria-disabled": props.disabled, className: cn('linkButton', { disabled: props.disabled }) }, props)),
        helper && React__default['default'].createElement("span", { className: "linkButton-helper" }, helper)));
};
var LinkButton$1 = styled__default['default'](LinkButton)(linkButtonStyles);

var Subtitle$1 = styled__default['default'].div(typographyCaptionStyles);
var Checkbox = function (_a) {
    var title = _a.title, label = _a.label, className = _a.className, state = _a.state, subtitle = _a.subtitle, props = __rest(_a, ["title", "label", "className", "state", "subtitle"]);
    var id = Math.random().toString(36).substring(2);
    return (React__default['default'].createElement("div", { className: className },
        title && React__default['default'].createElement("div", { className: 'checkbox-title' }, title),
        React__default['default'].createElement("div", { className: "checkbox-inner" },
            React__default['default'].createElement("input", __assign({ id: id, type: "checkbox" }, props)),
            label && (React__default['default'].createElement("label", { htmlFor: id },
                React__default['default'].createElement("svg", { width: "8", height: "7", viewBox: "0 0 8 7", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
                    React__default['default'].createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M7.75 1.8125L2.75 6.8125L0.25 4.3125L1.1875 3.375L2.75 4.9375L6.8125 0.875L7.75 1.8125Z", fill: "#F9F9FA" })),
                React__default['default'].createElement("span", null, label)))),
        subtitle && (React__default['default'].createElement(Subtitle$1, { state: state, className: "checkbox-subtitle" }, subtitle))));
};
var Checkbox$1 = styled__default['default'](Checkbox)(checkboxStyles);

var StyledH1 = styled__default['default'].h1(typographyH1Styles);
var StyledH2 = styled__default['default'].h2(typographyH2Styles);
var StyledH3 = styled__default['default'].h3(typographyH3Styles);
var StyledLead = styled__default['default'].span(typographyLeadStyles);
var StyledParagraph = styled__default['default'].p(typographyParagraphStyles);
var StyledButtonTypography = styled__default['default'].span(typographyButtonStyles);
var StyledCode = styled__default['default'].code(typographyCodeStyles);
var StyledCaption = styled__default['default'].span(typographyCaptionStyles);
var StyledAnchor = styled__default['default'].a(typographyLinkStyles);
var H1 = function (props) { return React__default['default'].createElement(StyledH1, __assign({}, props)); };
var H2 = function (props) { return React__default['default'].createElement(StyledH2, __assign({}, props)); };
var H3 = function (props) { return React__default['default'].createElement(StyledH3, __assign({}, props)); };
var Lead = function (props) { return React__default['default'].createElement(StyledLead, __assign({}, props)); };
var P = function (props) { return React__default['default'].createElement(StyledParagraph, __assign({}, props)); };
var B = function (props) { return React__default['default'].createElement(StyledButtonTypography, __assign({}, props)); };
var Code = function (props) { return React__default['default'].createElement(StyledCode, __assign({}, props)); };
var Caption = function (props) { return React__default['default'].createElement(StyledCaption, __assign({}, props)); };
var Link$1 = function (props) { return React__default['default'].createElement(StyledAnchor, __assign({}, props)); };

var CodeBox = function (_a) {
    _a.children; var code = _a.code, props = __rest(_a, ["children", "code"]);
    return (React__default['default'].createElement("pre", __assign({}, props),
        React__default['default'].createElement(Code, { dangerouslySetInnerHTML: { __html: code } })));
};
var CodeBox$1 = styled__default['default'](CodeBox)(codeBoxStyles);

var Text = styled__default['default'].div(forkMeStylesText);
styled__default['default'].img(forkMeStylesImages);
styled__default['default'].img(forkMeStylesFork);
var Link = styled__default['default'].a(forkMeStylesLink);
var ForkMe = function (_a) {
    var className = _a.className;
    return (React__default['default'].createElement("div", { className: className },
        React__default['default'].createElement(Text, null,
            "Fork this example project on",
            ' ',
            React__default['default'].createElement(Link, { href: 'https://github.com/ory' }, "GitHub!"))));
};
var ForkMe$1 = styled__default['default'](ForkMe)(forkMeStyles);

var Card = function (_a) {
    var className = _a.className; _a.wide; var props = __rest(_a, ["className", "wide"]);
    return (React__default['default'].createElement("div", __assign({ className: className }, props)));
};
var Card$1 = styled__default['default'](Card)(cardStyles);

var CardTitle = styled__default['default'](H2)(cardTitleStyles);

var Field = styled__default['default'].input(textInputStyles);
var Subtitle = styled__default['default'].div(typographyCaptionStyles);
var Title = styled__default['default'].div(typographyH3Styles);
var TextInput = function (_a) {
    var className = _a.className, title = _a.title, subtitle = _a.subtitle, disabled = _a.disabled, _b = _a.type, type = _b === void 0 ? 'text' : _b, props = __rest(_a, ["className", "title", "subtitle", "disabled", "type"]);
    var state = props.state;
    if (disabled) {
        state = 'disabled';
    }
    return (React__default['default'].createElement("div", { className: className },
        title && (React__default['default'].createElement(Title, { state: state, className: className }, title)),
        React__default['default'].createElement(Field, __assign({}, props, { state: state, type: type, className: className })),
        subtitle && (React__default['default'].createElement(Subtitle, { state: state, className: className }, subtitle))));
};

var Alert = function (_a) {
    _a.severity; var props = __rest(_a, ["severity"]);
    return React__default['default'].createElement("div", __assign({}, props));
};
var Alert$1 = styled__default['default'](Alert)(alertStyles);

var AlertContent = styled__default['default'](H3)(alertContentStyles);

exports.Alert = Alert$1;
exports.AlertContent = AlertContent;
exports.B = B;
exports.Button = Button$1;
exports.Caption = Caption;
exports.Card = Card$1;
exports.CardTitle = CardTitle;
exports.Checkbox = Checkbox$1;
exports.Code = Code;
exports.CodeBox = CodeBox$1;
exports.ForkMe = ForkMe$1;
exports.GlobalStyle = GlobalStyle;
exports.H1 = H1;
exports.H2 = H2;
exports.H3 = H3;
exports.Lead = Lead;
exports.Link = Link$1;
exports.LinkButton = LinkButton$1;
exports.P = P;
exports.TextInput = TextInput;
exports.alertContentStyles = alertContentStyles;
exports.alertStyles = alertStyles;
exports.buttonStyles = buttonStyles;
exports.cardStyles = cardStyles;
exports.cardTitleStyles = cardTitleStyles;
exports.checkboxStyles = checkboxStyles;
exports.codeBoxStyles = codeBoxStyles;
exports.cssButtonStyles = cssButtonStyles;
exports.cssButtonStylesBig = cssButtonStylesBig;
exports.cssCheckboxStyles = cssCheckboxStyles;
exports.cssCodeBoxStyles = cssCodeBoxStyles;
exports.cssForkMeStyles = cssForkMeStyles;
exports.cssForkMeStylesFork = cssForkMeStylesFork;
exports.cssForkMeStylesImages = cssForkMeStylesImages;
exports.cssForkMeStylesLink = cssForkMeStylesLink;
exports.cssForkMeStylesText = cssForkMeStylesText;
exports.cssLinkButtonStyles = cssLinkButtonStyles;
exports.cssLinkButtonStylesBig = cssLinkButtonStylesBig;
exports.cssMessageStyles = cssMessageStyles;
exports.cssNormalize = cssNormalize;
exports.cssTextInputStyles = cssTextInputStyles;
exports.cssTextInputSubtitleStyles = cssTextInputSubtitleStyles;
exports.cssTextInputTitleStyles = cssTextInputTitleStyles;
exports.cssTypographyButtonStyles = cssTypographyButtonStyles;
exports.cssTypographyCaptionStyles = cssTypographyCaptionStyles;
exports.cssTypographyCodeStyles = cssTypographyCodeStyles;
exports.cssTypographyH1Styles = cssTypographyH1Styles;
exports.cssTypographyH2Styles = cssTypographyH2Styles;
exports.cssTypographyH3Styles = cssTypographyH3Styles;
exports.cssTypographyLeadStyles = cssTypographyLeadStyles;
exports.cssTypographyLinkStyles = cssTypographyLinkStyles;
exports.cssTypographyParagraphStyles = cssTypographyParagraphStyles;
exports.forkMeStyles = forkMeStyles;
exports.forkMeStylesFork = forkMeStylesFork;
exports.forkMeStylesImages = forkMeStylesImages;
exports.forkMeStylesLink = forkMeStylesLink;
exports.forkMeStylesText = forkMeStylesText;
exports.globalStyles = globalStyles;
exports.linkButtonStyles = linkButtonStyles;
exports.messageStyles = messageStyles;
exports.textInputStyles = textInputStyles;
exports.textInputSubtitleStyles = textInputSubtitleStyles;
exports.textInputTitleStyles = textInputTitleStyles;
exports.theme = theme;
exports.typographyButtonStyles = typographyButtonStyles;
exports.typographyCaptionStyles = typographyCaptionStyles;
exports.typographyCodeStyles = typographyCodeStyles;
exports.typographyH1Styles = typographyH1Styles;
exports.typographyH2Styles = typographyH2Styles;
exports.typographyH3Styles = typographyH3Styles;
exports.typographyLeadStyles = typographyLeadStyles;
exports.typographyLinkStyles = typographyLinkStyles;
exports.typographyParagraphStyles = typographyParagraphStyles;
exports.wrapCss = wrapCss;
//# sourceMappingURL=index.js.map
